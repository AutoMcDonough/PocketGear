//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mod.Data.Localization {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MyTexts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MyTexts() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mod.Data.Localization.MyTexts", typeof(MyTexts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Place Pad ähnelt.
        /// </summary>
        internal static string BlockActionTitle_PlaceLandingPad {
            get {
                return ResourceManager.GetString("BlockActionTitle_PlaceLandingPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Place a new PocketGear Pad. ähnelt.
        /// </summary>
        internal static string BlockActionTooltip_PlaceLandingPad {
            get {
                return ResourceManager.GetString("BlockActionTooltip_PlaceLandingPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deploy Velocity ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_DeployVelocity {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_DeployVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lock Retract Behavior ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_LockRetractBehavior {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_LockRetractBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prevent Retracting ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_LockRetractBehavior_PreventRetract {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_LockRetractBehavior_PreventRetract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlock on retract ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_LockRetractBehavior_UnlockOnRetract {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_LockRetractBehavior_UnlockOnRetract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch Deploy State ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_SwitchDeployState {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_SwitchDeployState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deploy ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_SwitchDeployState_Deploy {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_SwitchDeployState_Deploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retract ähnelt.
        /// </summary>
        internal static string BlockPropertyTitle_SwitchDeployState_Retract {
            get {
                return ResourceManager.GetString("BlockPropertyTitle_SwitchDeployState_Retract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The speed at which the PocketGear is retracted / extended. ähnelt.
        /// </summary>
        internal static string BlockPropertyTooltip_DeployVelocity {
            get {
                return ResourceManager.GetString("BlockPropertyTooltip_DeployVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether it should prevent retracting if locked or if it should unlock on retract. ähnelt.
        /// </summary>
        internal static string BlockPropertyTooltip_LockRetractBehavior {
            get {
                return ResourceManager.GetString("BlockPropertyTooltip_LockRetractBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch between deploy and retract. ähnelt.
        /// </summary>
        internal static string BlockPropertyTooltip_SwitchDeployState {
            get {
                return ResourceManager.GetString("BlockPropertyTooltip_SwitchDeployState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGears are retractable landing gears and capable of magnetically locking to any surface. ähnelt.
        /// </summary>
        internal static string Description_PocketGear_Base {
            get {
                return ResourceManager.GetString("Description_PocketGear_Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MagLocks are capable of magnetically locking to any surface over a long distance.
        ///
        ///MagLocks can be locked and unlocked by pressing [{CONTROL:LANDING_GEAR}] when inside a cockpit.
        ///They will show up yellow when in range of a surface that they can lock onto. ähnelt.
        /// </summary>
        internal static string Description_PocketGear_MagLock {
            get {
                return ResourceManager.GetString("Description_PocketGear_MagLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Pads capable of magnetically locking to any surface.
        ///
        ///PocketGear Pads can be locked and unlocked by pressing [{CONTROL:LANDING_GEAR}] when inside a cockpit. 
        ///They will show up yellow when in range of a surface that they can lock onto. ähnelt.
        /// </summary>
        internal static string Description_PocketGear_Pad {
            get {
                return ResourceManager.GetString("Description_PocketGear_Pad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is a part of a PocketGear which will retract into the PocketGear Base. ähnelt.
        /// </summary>
        internal static string Description_PocketGear_Part {
            get {
                return ResourceManager.GetString("Description_PocketGear_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Base ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_Base {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Large Base ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_Large_Base {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_Large_Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Large Pad ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_Large_Pad {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_Large_Pad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Large Part ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_Large_Part {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_Large_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear MagLock ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_MagLock {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_MagLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Pad ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_Pad {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_Pad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PocketGear Part ähnelt.
        /// </summary>
        internal static string DisplayName_Block_PocketGear_Part {
            get {
                return ResourceManager.GetString("DisplayName_Block_PocketGear_Part", resourceCulture);
            }
        }
    }
}
